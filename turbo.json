{
  "pipeline": {
    // calls `cargo build` at for the whole workspace 
    // which seems to do the best job of caching and not building unnecessarily
    "//#rc:build": {
      "cache": false
    },
    // used to call lang-js build, which is the only non-rust thing that needs to be _built_ (for local dev)
    "jsbuild:backend": {
      "outputs": [
        "dist/**",
        "target/**"
      ]
    },
    "build": {
      "dependsOn": [
        "^build"
      ],
      "outputs": [
        "dist/**",
        "target/**"
      ]
    },
    // script meant to be used only when intending to boot the entire stack
    "dev:backend": {
      "cache": false,
      "dependsOn": [
        "//#rc:build",
        "^jsbuild:backend"
      ]
    },
    "dev:frontend": {
      "cache": false
    },
    "//#rc:clean": {
      "cache": false
    },
    "clean": {
      "cache": false
    }
  }
}
/*
NOTES ABOUT TURBO SETUP

things are a bit hairy/unusual because
- we mostly want to run rust related stuff at the root
- we want to let cargo manage it's own caching logic
- we can't automatically filter based on names/directories alone :(
  (unless we move stuff around or make some naming conventions...)
- turbo does not yet support overriding task pipeline settings (ie all `build` tasks have the same settings)

If turbo in the future adopts a more flexible tagging system, then we could probably simplify things a lot
*/