version: "3"

# NOTE(nick): "depends_on" will start parent containers when using `docker
# compose` run, so we should try to only use it when necessary.

services:
  web:
    image: "index.docker.io/systeminit/web:stable"
    profiles:
      - si
      - si-watchtower
      - web
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    ports:
      - "443:443"
    restart: "unless-stopped"

  sdf:
    image: "index.docker.io/systeminit/sdf:stable"
    profiles:
      - si
      - si-watchtower
      - sdf
    ports:
      - "5156:5156"
    environment:
      - "SI_SDF__PG__HOSTNAME=postgres"
      - "SI_SDF__NATS__URL=nats"
      - "OTEL_EXPORTER_OTLP_ENDPOINT=http://otelcol:4317"
    extra_hosts:
      - "postgres:${GATEWAY:-I like my butt}"
      - "nats:${GATEWAY:-I like my butt}"
      - "otelcol:${GATEWAY:-I like my butt}"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "com.centurylinklabs.watchtower.lifecycle.pre-update='/reset-database.sh'"
    volumes:
      - "/opt/deploy/scripts/reset-database.sh:/reset-database.sh:ro"
    depends_on:
      - pg
      - otel
      - nats
    restart: "unless-stopped"

  veritech:
    image: "index.docker.io/systeminit/veritech:stable"
    profiles:
      - si
      - si-watchtower
      - veritech
    environment:
      - "SI_VERITECH__NATS__URL=nats"
      - "OTEL_EXPORTER_OTLP_ENDPOINT=http://otelcol:4317"
    extra_hosts:
      - "nats:${GATEWAY:-I like my butt}"
      - "otelcol:${GATEWAY:-I like my butt}"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - otel
      - nats
    restart: "unless-stopped"

  pinga:
    image: "index.docker.io/systeminit/pinga:stable"
    profiles:
      - si
      - si-watchtower
      - pinga
    environment:
      - "SI_PINGA__PG__HOSTNAME=postgres"
      - "SI_PINGA__NATS__URL=nats"
      - "OTEL_EXPORTER_OTLP_ENDPOINT=http://otelcol:4317"
    extra_hosts:
      - "postgres:${GATEWAY:-I like my butt}"
      - "nats:${GATEWAY:-I like my butt}"
      - "otelcol:${GATEWAY:-I like my butt}"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - pg
      - otel
      - nats
    restart: "unless-stopped"

  council:
    image: "index.docker.io/systeminit/council:stable"
    profiles:
      - si
      - si-watchtower
      - council
    environment:
      - "SI_COUNCIL__NATS__URL=nats"
      - "OTEL_EXPORTER_OTLP_ENDPOINT=http://otelcol:4317"
    extra_hosts:
      - "nats:${GATEWAY:-I like my butt}"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - nats
    restart: "unless-stopped"

  pg:
    image: "index.docker.io/systeminit/postgres:stable"
    environment:
      - "POSTGRES_PASSWORD=bugbear"
      - "PGPASSWORD=bugbear"
      - "POSTGRES_USER=si"
      - "POSTGRES_DB=si"
      - "POSTGRES_MULTIPLE_DBS=si_test,si_test_dal,si_test_sdf_server,si_auth,si_module_index"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    ports:
      - "5432:5432"

  nats:
    image: "index.docker.io/systeminit/nats:stable"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    ports:
      - "4222:4222"
    command:
      - "--config"
      - "nats-server.conf"
      - "-DVV"

  jaeger:
    image: "index.docker.io/jaegertracing/all-in-one:1.43"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    ports:
      - "5317:4317"
      - "16686:16686"
    environment:
      - "COLLECTOR_OTLP_ENABLED=true"

  otel:
    image: "index.docker.io/systeminit/otelcol:stable"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    ports:
      - "4317:4317"
      - "55679:55679"
    depends_on:
      - jaeger

  # NOTE(nick): watchtower requires full image names for private registries,
  # which include prefixes like "index.docker.io".
  watchtower:
    image: "containrrr/watchtower"
    profiles:
      - watchtower
      - si-watchtower
    environment:
      - "WATCHTOWER_LIFECYCLE_HOOKS=true"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "${DOCKER_CONFIG:-~/.docker/config.json}:/config.json:ro"
    command: --interval 10 --label-enable

  guinea:
    image: "index.docker.io/systeminit/guinea:stable"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "com.centurylinklabs.watchtower.lifecycle.pre-update='/reset-database.sh'"
    volumes:
      - "/opt/deploy/scripts/reset-database.sh:/reset-database.sh:ro"
    profiles:
      - guinea
    extra_hosts:
      - "postgres:${GATEWAY:-I like my butt}"
    ports:
      - "8080:80"
