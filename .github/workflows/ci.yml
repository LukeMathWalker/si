---
name: ci
on:
  pull_request:
    branches:
      - main
  repository_dispatch:
    types:
      - run-build-command

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-run-tests:
    if: github.event_name == 'repository_dispatch' ||
      github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    outputs:
      run_tests: ${{ steps.save_output.outputs.run_tests }}
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v35.5.5
        with:
          files_ignore: |
            bin/si-discord-bot/**
            **.md
      - name: Output
        id: save_output
        env:
          RUN_TESTS: ${{steps.changed-files.outputs.any_changed == 'true'}}
        run: |
          echo $RUN_TESTS
          echo "run_tests=$RUN_TESTS" >> $GITHUB_OUTPUT
  ci:
    if: github.event_name == 'repository_dispatch' ||
      github.event.pull_request.head.repo.full_name == github.repository
    timeout-minutes: 40
    needs: check-run-tests
    name: Pull Request Checks
    runs-on: self-hosted
    steps:
      # Still need at least a step
      - name: 'Skip CI run but pass'
        if: needs.check-run-tests.outputs.run_tests == 'false'
        run: echo YOLO

      - name: Git Checkout
        if: needs.check-run-tests.outputs.run_tests == 'true'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install node, pnpm, dependencies
        if: needs.check-run-tests.outputs.run_tests == 'true'
        uses: ./.github/actions/node-pnpm-setup
      - name: Install Rust
        if: needs.check-run-tests.outputs.run_tests == 'true'
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Login Docker
        if: needs.check-run-tests.outputs.run_tests == 'true'
        id: login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: ci
        if: needs.check-run-tests.outputs.run_tests == 'true'
        id: ci
        run: |
          : make ci
          source /data/runners/.profile
          make \
            CI=true \
            CI_FROM_REF=${{ github.event.pull_request.base.sha }} \
            CI_TO_REF=${{ github.event.pull_request.head.sha }} \
            SI_TEST_ARGS=--nocapture \
            ci
        env:
          HONEYCOMB_TOKEN: ${{ secrets.HONEYCOMB_TOKEN }}
          RUSTC_WRAPPER: /usr/local/bin/sccache
          CARGO_INCREMENTAL: false
  comment-notification:
    if: github.event_name == 'repository_dispatch'
    name: comment-notification
    runs-on: ubuntu-latest
    steps:
      - id: run-url
        name: Create URL to the run output
        run: echo ::set-output
          name=run-url::https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
      - name: Update with Result
        uses: peter-evans/create-or-update-comment@v2
        with:
          body: "Please view the PR build: ${{ steps.run-url.outputs.run-url }}"
          issue-number: ${{ github.event.client_payload.github.payload.issue.number }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
